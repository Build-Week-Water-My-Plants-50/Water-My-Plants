{"ast":null,"code":"var _jsxFileName = \"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/PlantForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport * as yup from \"yup\";\nimport schema from \"../Form_Schema\";\nimport \"./PlantForm.css\";\nimport axiosWithAuth from \"./axiosWithAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_disabled = true;\nconst initial_form_values = {\n  nickname: \"\",\n  species: \"\",\n  h2oFrequency: \"\",\n  image: \"\"\n};\nconst initial_form_errors = {\n  nickname: \"\",\n  species: \"\",\n  h2oFrequency: \"\",\n  image: \"\"\n};\nexport default function PlantForm(props) {\n  _s();\n\n  const {\n    plants,\n    plant,\n    set_plant_values\n  } = props;\n  const [form_values, set_form_values] = useState(initial_form_values);\n  const [disabled, set_disabled] = useState(initial_disabled);\n  const [errors, set_errors] = useState(initial_form_errors);\n\n  const post_new_plant = new_plant => {\n    axiosWithAuth().post(`https://watermyplantsweb46.herokuapp.com/api/plants`, new_plant).then(res => {\n      set_plant_values([res.data, ...plants]);\n      console.log(plants);\n    }).catch(err => {\n      console.error(err);\n    }).finally(() => {\n      set_form_values(initial_form_values);\n    });\n  };\n\n  const validate = (name, value) => {\n    yup.reach(schema, name).validate(value).then(() => set_errors({ ...errors,\n      [name]: \"\"\n    })).catch(err => set_errors({\n      errors,\n      [name]: err.errors[0]\n    }));\n  };\n\n  const change = (name, value) => {\n    set_form_values({ ...form_values,\n      [name]: value\n    });\n    validate(name, value);\n  };\n\n  const form_submit = () => {\n    const new_plant = {\n      nickname: form_values.nickname.trim(),\n      species: form_values.species.trim(),\n      h2oFrequency: form_values.h2oFrequency.trim(),\n      image: form_values.image.trim()\n    };\n    post_new_plant(new_plant);\n  };\n\n  useEffect(() => {\n    schema.isValid(form_values).then(valid => set_disabled(!valid));\n  }, [form_values]);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    form_submit();\n  };\n\n  const onChange = evt => {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    change(name, value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"plantform\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"plant-form-container\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errors\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.species\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.h2oFrequency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nickname \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: form_values.nickname,\n            onChange: onChange,\n            name: \"nickname\",\n            type: \"text\",\n            placeholder: \"Nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Species \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: form_values.species,\n            onChange: onChange,\n            name: \"species\",\n            type: \"text\",\n            placeholder: \"Species\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"How often do you water this plant? \\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"h2oFrequency\",\n            onChange: onChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Select One--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Twice a day\",\n              children: \"Twice a day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Once a day\",\n              children: \"Once a day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Every other day\",\n              children: \"Every other day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Twice a week\",\n              children: \"Twice a week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Image: \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: onChange,\n            name: \"image\",\n            value: form_values.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: disabled,\n          className: \"save-plant\",\n          children: \"Save New Plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n} // import React, {useEffect, useState} from 'react';\n// import * as yup from \"yup\";\n// import schema from \"../Form_Schema\";\n// import \"./PlantForm.css\"\n// import axiosWithAuth from \"./axiosWithAuth\";\n//\n//\n// const initial_disabled = true;\n// const initial_form_values = {\n//     nickname: \"\",\n//     species: \"\",\n//     h2oFrequency: \"\",\n//     image:\"\"\n// }\n// const initial_form_errors={\n//     nickname:\"\",\n//     species:\"\",\n//     h2oFrequency:\"\",\n//     image:\"\"\n// }\n// export default function PlantForm(props){\n//     const { plants, set_plant_values} = props\n//\n//     const [form_values, set_form_values] = useState(initial_form_values);\n//     const [disabled, set_disabled] = useState(initial_disabled);\n//     const [errors, set_errors]=useState(initial_form_errors);\n//\n//\n//     const post_new_plant = new_plant => {\n//\n//         axiosWithAuth().post(`https://watermyplantsweb46.herokuapp.com/api/plants`, new_plant)\n//             .then(res=> {\n//                 set_plant_values([res.data, ...plants])\n//                 console.log(plants)\n//             })\n//             .catch(err => {\n//                 console.error(err)\n//             })\n//             .finally( () =>{\n//                 set_form_values(initial_form_values)\n//             })\n//     }\n//\n//     const validate = (name, value) => {\n//         yup.reach(schema, name)\n//             .validate(value)\n//             .then(() => set_errors({...errors, [name]:\"\"}) )\n//             .catch(err => set_errors({errors, [name]: err.errors[0]}))\n//     }\n//\n//     const change= (name, value) =>{\n//         set_form_values({ ...form_values, [name]: value });\n//         validate(name, value);\n//\n//     }\n//\n//     const form_submit = () => {\n//         const new_plant = {\n//             nickname: form_values.nickname.trim(),\n//             species: form_values.species.trim(),\n//             h2oFrequency: form_values.h2oFrequency.trim(),\n//             image: form_values.image.trim()\n//         }\n//         post_new_plant(new_plant);\n//     }\n//\n//     useEffect(() => {\n//         schema.isValid(form_values).then(valid => set_disabled(!valid))\n//     },[form_values])\n//\n//\n//     const onSubmit = evt => {\n//         evt.preventDefault();\n//         form_submit();\n//     }\n//\n//     const onChange = evt => {\n//         const name = evt.target.name;\n//         const value = evt.target.value;\n//         change(name, value);\n//     }\n//\n//     return(\n//         <form className='form-container' onSubmit={onSubmit} >\n//             <div className='form-inputs submit'>\n//                 <h2>Add New Plant</h2>\n//                 <div className='errors'>\n//                     <div>{errors.nickname}</div>\n//                     <div>{errors.species}</div>\n//                     <div>{errors.h2oFrequency}</div>\n//                     <div>{errors.image}</div>\n//                 </div>\n//             </div>\n//\n//             <div className='form-group-inputs'>\n//                 <h3>User Information</h3>\n//                 <label>Nickname &nbsp;\n//                     <input\n//                         value={form_values.nickname}\n//                         onChange={onChange}\n//                         name='nickname'\n//                         type='text'\n//                         placeholder='Nickname'\n//                     />\n//                 </label>\n//                 <label>Species &nbsp;\n//                     <input\n//                         value={form_values.species}\n//                         onChange={onChange}\n//                         name='species'\n//                         type='text'\n//                         placeholder='Species'\n//                     />\n//                 </label>\n//                 <label>How often do you water this plant? &nbsp;\n//                     <select name=\"h2oFrequency\" onChange={onChange}>\n//                         <option value=\"\">--Select One--</option>\n//                         <option value=\"none\">None</option>\n//                         <option value=\"Twice a day\">Twice a day</option>\n//                         <option value=\"Once a day\">Once a day</option>\n//                         <option value=\"Every other day\">Every other day</option>\n//                         <option value=\"Twice a week\">Twice a week</option>\n//                     </select><br/><br/>\n//                 </label>\n//                 <label>Image: &nbsp;\n//                     <input\n//                         type=\"text\"\n//                         onChange={onChange}\n//                         name='image'\n//                         value={form_values.image}\n//                     />\n//                 </label><br/>\n//                 <button disabled={disabled} className=\"save-plant\">Save New Plant</button>\n//             </div>\n//         </form>\n//     )\n// }\n\n_s(PlantForm, \"eKTpBn635vN0ztJRsdYKBi0SBz8=\");\n\n_c = PlantForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantForm\");","map":{"version":3,"sources":["/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/PlantForm.js"],"names":["React","useEffect","useState","yup","schema","axiosWithAuth","initial_disabled","initial_form_values","nickname","species","h2oFrequency","image","initial_form_errors","PlantForm","props","plants","plant","set_plant_values","form_values","set_form_values","disabled","set_disabled","errors","set_errors","post_new_plant","new_plant","post","then","res","data","console","log","catch","err","error","finally","validate","name","value","reach","change","form_submit","trim","isValid","valid","onSubmit","evt","preventDefault","onChange","target"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport * as yup from \"yup\";\nimport schema from \"../Form_Schema\";\nimport \"./PlantForm.css\"\nimport axiosWithAuth from \"./axiosWithAuth\";\n\n\nconst initial_disabled = true;\nconst initial_form_values = {\n    nickname: \"\",\n    species: \"\",\n    h2oFrequency: \"\",\n    image:\"\"\n}\nconst initial_form_errors={\n    nickname:\"\",\n    species:\"\",\n    h2oFrequency:\"\",\n    image:\"\"\n}\nexport default function PlantForm(props){\n    const { plants, plant, set_plant_values} = props\n\n    const [form_values, set_form_values] = useState(initial_form_values);\n    const [disabled, set_disabled] = useState(initial_disabled);\n    const [errors, set_errors]=useState(initial_form_errors);\n\n\n    const post_new_plant = new_plant => {\n\n        axiosWithAuth().post(`https://watermyplantsweb46.herokuapp.com/api/plants`, new_plant)\n            .then(res=> {\n                set_plant_values([res.data, ...plants])\n                console.log(plants)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n            .finally( () =>{\n                set_form_values(initial_form_values)\n            })\n    }\n\n    const validate = (name, value) => {\n        yup.reach(schema, name)\n            .validate(value)\n            .then(() => set_errors({...errors, [name]:\"\"}) )\n            .catch(err => set_errors({errors, [name]: err.errors[0]}))\n    }\n\n    const change= (name, value) =>{\n        set_form_values({ ...form_values, [name]: value });\n        validate(name, value);\n\n    }\n\n    const form_submit = () => {\n        const new_plant = {\n            nickname: form_values.nickname.trim(),\n            species: form_values.species.trim(),\n            h2oFrequency: form_values.h2oFrequency.trim(),\n            image: form_values.image.trim()\n        }\n        post_new_plant(new_plant);\n    }\n\n    useEffect(() => {\n        schema.isValid(form_values).then(valid => set_disabled(!valid))\n    },[form_values])\n\n\n    const onSubmit = evt => {\n        evt.preventDefault();\n        form_submit();\n    }\n\n    const onChange = evt => {\n        const name = evt.target.name;\n        const value = evt.target.value;\n        change(name, value);\n    }\n\n    return(\n        <div id=\"plantform\">\n            <form className='plant-form-container' onSubmit={onSubmit} >\n                <div className='form-inputs submit'>\n                    <h2>Add New Plant</h2>\n                    <div className='errors'>\n                        <div>{errors.nickname}</div>\n                        <div>{errors.species}</div>\n                        <div>{errors.h2oFrequency}</div>\n                        <div>{errors.image}</div>\n                    </div>\n                </div>\n\n                <div className='form-group-inputs'>\n                    <h3>User Information</h3>\n                    <label>Nickname &nbsp;\n                        <input\n                            value={form_values.nickname}\n                            onChange={onChange}\n                            name='nickname'\n                            type='text'\n                            placeholder='Nickname'\n                        />\n                    </label>\n                    <label>Species &nbsp;\n                        <input\n                            value={form_values.species}\n                            onChange={onChange}\n                            name='species'\n                            type='text'\n                            placeholder='Species'\n                        />\n                    </label>\n                    <label>How often do you water this plant? &nbsp;\n                        <select name=\"h2oFrequency\" onChange={onChange}>\n                            <option value=\"\">--Select One--</option>\n                            <option value=\"none\">None</option>\n                            <option value=\"Twice a day\">Twice a day</option>\n                            <option value=\"Once a day\">Once a day</option>\n                            <option value=\"Every other day\">Every other day</option>\n                            <option value=\"Twice a week\">Twice a week</option>\n                        </select><br/><br/>\n                    </label>\n                    <label>Image: &nbsp;\n                        <input\n                            type=\"text\"\n                            onChange={onChange}\n                            name='image'\n                            value={form_values.image}\n                        />\n                    </label><br/>\n                    <button disabled={disabled} className=\"save-plant\">Save New Plant</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n// import React, {useEffect, useState} from 'react';\n// import * as yup from \"yup\";\n// import schema from \"../Form_Schema\";\n// import \"./PlantForm.css\"\n// import axiosWithAuth from \"./axiosWithAuth\";\n//\n//\n// const initial_disabled = true;\n// const initial_form_values = {\n//     nickname: \"\",\n//     species: \"\",\n//     h2oFrequency: \"\",\n//     image:\"\"\n// }\n// const initial_form_errors={\n//     nickname:\"\",\n//     species:\"\",\n//     h2oFrequency:\"\",\n//     image:\"\"\n// }\n// export default function PlantForm(props){\n//     const { plants, set_plant_values} = props\n//\n//     const [form_values, set_form_values] = useState(initial_form_values);\n//     const [disabled, set_disabled] = useState(initial_disabled);\n//     const [errors, set_errors]=useState(initial_form_errors);\n//\n//\n//     const post_new_plant = new_plant => {\n//\n//         axiosWithAuth().post(`https://watermyplantsweb46.herokuapp.com/api/plants`, new_plant)\n//             .then(res=> {\n//                 set_plant_values([res.data, ...plants])\n//                 console.log(plants)\n//             })\n//             .catch(err => {\n//                 console.error(err)\n//             })\n//             .finally( () =>{\n//                 set_form_values(initial_form_values)\n//             })\n//     }\n//\n//     const validate = (name, value) => {\n//         yup.reach(schema, name)\n//             .validate(value)\n//             .then(() => set_errors({...errors, [name]:\"\"}) )\n//             .catch(err => set_errors({errors, [name]: err.errors[0]}))\n//     }\n//\n//     const change= (name, value) =>{\n//         set_form_values({ ...form_values, [name]: value });\n//         validate(name, value);\n//\n//     }\n//\n//     const form_submit = () => {\n//         const new_plant = {\n//             nickname: form_values.nickname.trim(),\n//             species: form_values.species.trim(),\n//             h2oFrequency: form_values.h2oFrequency.trim(),\n//             image: form_values.image.trim()\n//         }\n//         post_new_plant(new_plant);\n//     }\n//\n//     useEffect(() => {\n//         schema.isValid(form_values).then(valid => set_disabled(!valid))\n//     },[form_values])\n//\n//\n//     const onSubmit = evt => {\n//         evt.preventDefault();\n//         form_submit();\n//     }\n//\n//     const onChange = evt => {\n//         const name = evt.target.name;\n//         const value = evt.target.value;\n//         change(name, value);\n//     }\n//\n//     return(\n//         <form className='form-container' onSubmit={onSubmit} >\n//             <div className='form-inputs submit'>\n//                 <h2>Add New Plant</h2>\n//                 <div className='errors'>\n//                     <div>{errors.nickname}</div>\n//                     <div>{errors.species}</div>\n//                     <div>{errors.h2oFrequency}</div>\n//                     <div>{errors.image}</div>\n//                 </div>\n//             </div>\n//\n//             <div className='form-group-inputs'>\n//                 <h3>User Information</h3>\n//                 <label>Nickname &nbsp;\n//                     <input\n//                         value={form_values.nickname}\n//                         onChange={onChange}\n//                         name='nickname'\n//                         type='text'\n//                         placeholder='Nickname'\n//                     />\n//                 </label>\n//                 <label>Species &nbsp;\n//                     <input\n//                         value={form_values.species}\n//                         onChange={onChange}\n//                         name='species'\n//                         type='text'\n//                         placeholder='Species'\n//                     />\n//                 </label>\n//                 <label>How often do you water this plant? &nbsp;\n//                     <select name=\"h2oFrequency\" onChange={onChange}>\n//                         <option value=\"\">--Select One--</option>\n//                         <option value=\"none\">None</option>\n//                         <option value=\"Twice a day\">Twice a day</option>\n//                         <option value=\"Once a day\">Once a day</option>\n//                         <option value=\"Every other day\">Every other day</option>\n//                         <option value=\"Twice a week\">Twice a week</option>\n//                     </select><br/><br/>\n//                 </label>\n//                 <label>Image: &nbsp;\n//                     <input\n//                         type=\"text\"\n//                         onChange={onChange}\n//                         name='image'\n//                         value={form_values.image}\n//                     />\n//                 </label><br/>\n//                 <button disabled={disabled} className=\"save-plant\">Save New Plant</button>\n//             </div>\n//         </form>\n//     )\n// }\n\n"]},"metadata":{},"sourceType":"module"}