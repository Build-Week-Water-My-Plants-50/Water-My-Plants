[{"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/index.js":"1","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/App.js":"2","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/reportWebVitals.js":"3","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Home.js":"4","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Footer.js":"5","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Sign_Up.js":"6","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Header.js":"7","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/PrivateRoute.js":"8","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/PlantsList.js":"9","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Login.js":"10","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/UserProfile.js":"11","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/PlantForm.js":"12","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/axiosWithAuth.js":"13","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Plant.js":"14","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/Form_Schema.js":"15","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Edit_Plant.js":"16"},{"size":310,"mtime":1634831468738,"results":"17","hashOfConfig":"18"},{"size":1775,"mtime":1634831468727,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1634831468738,"results":"20","hashOfConfig":"18"},{"size":246,"mtime":1634831468728,"results":"21","hashOfConfig":"18"},{"size":396,"mtime":1634831468727,"results":"22","hashOfConfig":"18"},{"size":3100,"mtime":1634831468729,"results":"23","hashOfConfig":"18"},{"size":977,"mtime":1634845267567,"results":"24","hashOfConfig":"18"},{"size":423,"mtime":1634831468729,"results":"25","hashOfConfig":"18"},{"size":889,"mtime":1634839457707,"results":"26","hashOfConfig":"18"},{"size":2400,"mtime":1634831468728,"results":"27","hashOfConfig":"18"},{"size":2969,"mtime":1634847293192,"results":"28","hashOfConfig":"18"},{"size":9540,"mtime":1634831468728,"results":"29","hashOfConfig":"18"},{"size":236,"mtime":1634831468729,"results":"30","hashOfConfig":"18"},{"size":2104,"mtime":1634847293191,"results":"31","hashOfConfig":"18"},{"size":744,"mtime":1634831468727,"results":"32","hashOfConfig":"18"},{"size":4476,"mtime":1634839435525,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1ej1k8u",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"37"},"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/index.js",["73"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n",["74","75"],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/App.js",["76","77"],"import React, {useEffect, useState } from \"react\"\nimport './App.css';\nimport axios from 'axios';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Sign_Up\";\nimport PlantForm from \"./components/PlantForm\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\nimport PlantsList from \"./components/PlantsList\";\nimport Header from \"./components/Header\"\nimport UserProfile from \"./components/UserProfile\";\n\n\nconst initial_plant_values = [];\n\nfunction App() {\n    const [plants, set_plant_values] = useState(initial_plant_values);\n\n    return (\n        <div className=\"App\">\n            <div>\n                <Header />\n            </div>\n                <div id=\"app-body\">\n                    <Switch>\n                        <Route path=\"/profile\">\n                            <UserProfile/>\n                        </Route>\n                        <PrivateRoute path=\"/PlantForm\">\n                            <PlantForm plants = {plants} set_plant_values={set_plant_values}/>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/PlantsList\">\n                            <PlantsList set_plant_values={set_plant_values} plants={plants}/>\n                        </PrivateRoute>\n                        <Route path=\"/signup\">\n                            <Signup />\n                        </Route>\n                        <Route path=\"/login\" component={Login}/>\n                        <Route path=\"/\">\n                            <Home />\n                        </Route>\n                    </Switch>\n                </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default App;\n","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/reportWebVitals.js",[],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Home.js",[],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Footer.js",[],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Sign_Up.js",["78"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport styled from \"styled-components\";\nimport \"./Sign_Up.css\";\n\nconst initialValues = {\n    username: \"\",\n    password:\"\",\n    phonenumber: \"\"\n};\n\n\n\nexport default function Signup() {\n    const { push } = useHistory();\n    const [formValues, setFormValues] = useState(initialValues);\n\n    const handleChange = (e) => {\n        setFormValues({\n            ...formValues,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post('https://watermyplantsweb46.herokuapp.com/api/auth/register', formValues)\n        .then((res) => {\n\n            push('./login');\n        })\n        .catch(err => {\n            console.log(err.message);\n        })\n        .finally(() => {\n            setFormValues(formValues)\n            console.log(formValues);\n        })\n    };\n\n\n    return (\n        <>\n            <div className=\"signup-container\">\n                <form id='signup-form' onSubmit={handleSubmit}>\n                    <div className=\"signup-form-header\">\n                        <h1>Create an account</h1>\n                        <p>Already have an account? <Link id =\"login\" to=\"/login\">Login here!</Link></p>\n                    </div>\n\n                    <div className=\"signup-input-container\">\n                        <div className=\"form-inputs\" id=\"signup-inputs\">\n                                <label htmlFor=\"username\">Username:</label>\n                                <input\n                                    value={formValues.username}\n                                    id=\"username\"\n                                    name=\"username\"\n                                    type=\"text\"\n                                    onChange={handleChange}\n                                />\n                                <label htmlFor=\"password\">Password:</label>\n                                <input\n                                    value={formValues.password}\n                                    id=\"password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    onChange={handleChange}\n                                />\n                                <label htmlFor=\"phonenumber\">Phone Number:</label>\n                                <input\n                                    value={formValues.phonenumber}\n                                    id=\"phonenumber\"\n                                    name=\"phonenumber\"\n                                    type=\"tel\"\n                                    onChange={handleChange}\n                                    />\n                            <div className=\"errors\">\n                            </div>\n                        </div>\n                        <button id='signup-button'>Sign Up</button>\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Header.js",[],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/PrivateRoute.js",[],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/PlantsList.js",["79","80"],"import React, {useEffect} from \"react\";\nimport Plant from \"./Plant\";\nimport axios from \"axios\";\nimport axiosWithAuth from \"./axiosWithAuth\";\n\n\n\nexport default function PlantsList(props) {\n    const {plants, set_plant_values} = props;\n\n\n        axiosWithAuth().get(\"https://watermyplantsweb46.herokuapp.com/api/plants\")\n            .then(res => {\n                set_plant_values(res.data, ...plants)\n                // console.log(plants)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n\n\n    return (\n        <div>\n            {\n                plants.map(plant => {\n                    return (\n                        <Plant key={plant.plants_id} plant={plant}  plants={plants} set_plant_values={set_plant_values}/>\n                    )\n                })\n            }\n\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Login.js",[],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/UserProfile.js",[],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/PlantForm.js",["81"],"import React, {useEffect, useState} from 'react';\nimport * as yup from \"yup\";\nimport schema from \"../Form_Schema\";\nimport \"./PlantForm.css\"\nimport axiosWithAuth from \"./axiosWithAuth\";\n\n\nconst initial_disabled = true;\nconst initial_form_values = {\n    nickname: \"\",\n    species: \"\",\n    h2oFrequency: \"\",\n    image:\"\"\n}\nconst initial_form_errors={\n    nickname:\"\",\n    species:\"\",\n    h2oFrequency:\"\",\n    image:\"\"\n}\nexport default function PlantForm(props){\n    const { plants, plant, set_plant_values} = props\n\n    const [form_values, set_form_values] = useState(initial_form_values);\n    const [disabled, set_disabled] = useState(initial_disabled);\n    const [errors, set_errors]=useState(initial_form_errors);\n\n\n    const post_new_plant = new_plant => {\n\n        axiosWithAuth().post(`https://watermyplantsweb46.herokuapp.com/api/plants`, new_plant)\n            .then(res=> {\n                set_plant_values([res.data, ...plants])\n                console.log(plants)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n            .finally( () =>{\n                set_form_values(initial_form_values)\n            })\n    }\n\n    const validate = (name, value) => {\n        yup.reach(schema, name)\n            .validate(value)\n            .then(() => set_errors({...errors, [name]:\"\"}) )\n            .catch(err => set_errors({errors, [name]: err.errors[0]}))\n    }\n\n    const change= (name, value) =>{\n        set_form_values({ ...form_values, [name]: value });\n        validate(name, value);\n\n    }\n\n    const form_submit = () => {\n        const new_plant = {\n            nickname: form_values.nickname.trim(),\n            species: form_values.species.trim(),\n            h2oFrequency: form_values.h2oFrequency.trim(),\n            image: form_values.image.trim()\n        }\n        post_new_plant(new_plant);\n    }\n\n    useEffect(() => {\n        schema.isValid(form_values).then(valid => set_disabled(!valid))\n    },[form_values])\n\n\n    const onSubmit = evt => {\n        evt.preventDefault();\n        form_submit();\n    }\n\n    const onChange = evt => {\n        const name = evt.target.name;\n        const value = evt.target.value;\n        change(name, value);\n    }\n\n    return(\n        <div id=\"plantform\">\n            <form className='plant-form-container' onSubmit={onSubmit} >\n                <div className='form-inputs submit'>\n                    <h2>Add New Plant</h2>\n                    <div className='errors'>\n                        <div>{errors.nickname}</div>\n                        <div>{errors.species}</div>\n                        <div>{errors.h2oFrequency}</div>\n                        <div>{errors.image}</div>\n                    </div>\n                </div>\n\n                <div className='form-group-inputs'>\n                    <h3>User Information</h3>\n                    <label>Nickname &nbsp;\n                        <input\n                            value={form_values.nickname}\n                            onChange={onChange}\n                            name='nickname'\n                            type='text'\n                            placeholder='Nickname'\n                        />\n                    </label>\n                    <label>Species &nbsp;\n                        <input\n                            value={form_values.species}\n                            onChange={onChange}\n                            name='species'\n                            type='text'\n                            placeholder='Species'\n                        />\n                    </label>\n                    <label>How often do you water this plant? &nbsp;\n                        <select name=\"h2oFrequency\" onChange={onChange}>\n                            <option value=\"\">--Select One--</option>\n                            <option value=\"none\">None</option>\n                            <option value=\"Twice a day\">Twice a day</option>\n                            <option value=\"Once a day\">Once a day</option>\n                            <option value=\"Every other day\">Every other day</option>\n                            <option value=\"Twice a week\">Twice a week</option>\n                        </select><br/><br/>\n                    </label>\n                    <label>Image: &nbsp;\n                        <input\n                            type=\"text\"\n                            onChange={onChange}\n                            name='image'\n                            value={form_values.image}\n                        />\n                    </label><br/>\n                    <button disabled={disabled} className=\"save-plant\">Save New Plant</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n// import React, {useEffect, useState} from 'react';\n// import * as yup from \"yup\";\n// import schema from \"../Form_Schema\";\n// import \"./PlantForm.css\"\n// import axiosWithAuth from \"./axiosWithAuth\";\n//\n//\n// const initial_disabled = true;\n// const initial_form_values = {\n//     nickname: \"\",\n//     species: \"\",\n//     h2oFrequency: \"\",\n//     image:\"\"\n// }\n// const initial_form_errors={\n//     nickname:\"\",\n//     species:\"\",\n//     h2oFrequency:\"\",\n//     image:\"\"\n// }\n// export default function PlantForm(props){\n//     const { plants, set_plant_values} = props\n//\n//     const [form_values, set_form_values] = useState(initial_form_values);\n//     const [disabled, set_disabled] = useState(initial_disabled);\n//     const [errors, set_errors]=useState(initial_form_errors);\n//\n//\n//     const post_new_plant = new_plant => {\n//\n//         axiosWithAuth().post(`https://watermyplantsweb46.herokuapp.com/api/plants`, new_plant)\n//             .then(res=> {\n//                 set_plant_values([res.data, ...plants])\n//                 console.log(plants)\n//             })\n//             .catch(err => {\n//                 console.error(err)\n//             })\n//             .finally( () =>{\n//                 set_form_values(initial_form_values)\n//             })\n//     }\n//\n//     const validate = (name, value) => {\n//         yup.reach(schema, name)\n//             .validate(value)\n//             .then(() => set_errors({...errors, [name]:\"\"}) )\n//             .catch(err => set_errors({errors, [name]: err.errors[0]}))\n//     }\n//\n//     const change= (name, value) =>{\n//         set_form_values({ ...form_values, [name]: value });\n//         validate(name, value);\n//\n//     }\n//\n//     const form_submit = () => {\n//         const new_plant = {\n//             nickname: form_values.nickname.trim(),\n//             species: form_values.species.trim(),\n//             h2oFrequency: form_values.h2oFrequency.trim(),\n//             image: form_values.image.trim()\n//         }\n//         post_new_plant(new_plant);\n//     }\n//\n//     useEffect(() => {\n//         schema.isValid(form_values).then(valid => set_disabled(!valid))\n//     },[form_values])\n//\n//\n//     const onSubmit = evt => {\n//         evt.preventDefault();\n//         form_submit();\n//     }\n//\n//     const onChange = evt => {\n//         const name = evt.target.name;\n//         const value = evt.target.value;\n//         change(name, value);\n//     }\n//\n//     return(\n//         <form className='form-container' onSubmit={onSubmit} >\n//             <div className='form-inputs submit'>\n//                 <h2>Add New Plant</h2>\n//                 <div className='errors'>\n//                     <div>{errors.nickname}</div>\n//                     <div>{errors.species}</div>\n//                     <div>{errors.h2oFrequency}</div>\n//                     <div>{errors.image}</div>\n//                 </div>\n//             </div>\n//\n//             <div className='form-group-inputs'>\n//                 <h3>User Information</h3>\n//                 <label>Nickname &nbsp;\n//                     <input\n//                         value={form_values.nickname}\n//                         onChange={onChange}\n//                         name='nickname'\n//                         type='text'\n//                         placeholder='Nickname'\n//                     />\n//                 </label>\n//                 <label>Species &nbsp;\n//                     <input\n//                         value={form_values.species}\n//                         onChange={onChange}\n//                         name='species'\n//                         type='text'\n//                         placeholder='Species'\n//                     />\n//                 </label>\n//                 <label>How often do you water this plant? &nbsp;\n//                     <select name=\"h2oFrequency\" onChange={onChange}>\n//                         <option value=\"\">--Select One--</option>\n//                         <option value=\"none\">None</option>\n//                         <option value=\"Twice a day\">Twice a day</option>\n//                         <option value=\"Once a day\">Once a day</option>\n//                         <option value=\"Every other day\">Every other day</option>\n//                         <option value=\"Twice a week\">Twice a week</option>\n//                     </select><br/><br/>\n//                 </label>\n//                 <label>Image: &nbsp;\n//                     <input\n//                         type=\"text\"\n//                         onChange={onChange}\n//                         name='image'\n//                         value={form_values.image}\n//                     />\n//                 </label><br/>\n//                 <button disabled={disabled} className=\"save-plant\">Save New Plant</button>\n//             </div>\n//         </form>\n//     )\n// }\n\n","/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/axiosWithAuth.js",[],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Plant.js",["82","83","84","85"],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/Form_Schema.js",[],"/Users/kennedywardsworth/Desktop/Lambda/Unit3/build-week/Water-My-Plants/water-my/src/components/Edit_Plant.js",["86","87","88"],"import React, {useEffect, useState} from 'react';\nimport * as yup from \"yup\";\nimport schema from \"../Form_Schema\";\nimport axiosWithAuth from \"./axiosWithAuth\";\n\n\nconst initial_disabled = true;\nconst initial_form_values = {\n    nickname: \"\",\n    species: \"\",\n    h2oFrequency: \"\",\n    image:\"\"\n}\nconst initial_form_errors={\n    nickname:\"\",\n    species:\"\",\n    h2oFrequency:\"\",\n    image:\"\"\n}\nexport default function PlantEdit(props){\n    const { plants, plant, set_plant_values, isToggled} = props\n\n    const [edit_form_values, set_edit_form_values] = useState(initial_form_values);\n    const [disabled, set_disabled] = useState(initial_disabled);\n    const [errors, set_errors]=useState(initial_form_errors);\n\n\n    const edit_plant = (new_plant) => {\n        \n        axiosWithAuth().put(`https://watermyplantsweb46.herokuapp.com/api/plants/${plant.plants_id}`,new_plant)\n            .then(res => { \n                set_edit_form_values(initial_form_values)\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    }\n\n    const validate = (name, value) => {\n        yup.reach(schema, name)\n            .validate(value)\n            .then(() => set_errors({...errors, [name]:\"\"}) )\n            .catch(err => set_errors({errors, [name]: err.errors[0]}))\n    }\n\n    const change= (name, value) =>{\n        set_edit_form_values({ ...edit_form_values, [name]: value });\n        validate(name, value);\n\n    }\n\n    const form_submit = () => {\n        const new_plant = {\n            nickname: edit_form_values.nickname.trim(),\n            species: edit_form_values.species.trim(),\n            h2oFrequency: edit_form_values.h2oFrequency.trim(),\n            image: edit_form_values.image.trim()\n        }\n        edit_plant(new_plant);\n    }\n\n    useEffect(() => {\n        schema.isValid(edit_form_values).then(valid => set_disabled(!valid))\n    },[edit_form_values])\n\n\n    const onSubmit = evt => {\n        evt.preventDefault();\n        form_submit();\n    }\n\n    const onChange = evt => {\n        const name = evt.target.name;\n        const value = evt.target.value;\n        change(name, value);\n    }\n\n    return(\n       \n        <form className='plant-form-container' onSubmit={onSubmit} >\n            <div className='form-inputs submit'>\n                <h2>Edit New Plant</h2>\n                <div className='errors'>\n                    <div>{errors.nickname}</div>\n                    <div>{errors.species}</div>\n                    <div>{errors.h2oFrequency}</div>\n                    <div>{errors.image}</div>\n                </div>\n            </div>\n\n            <div className='form-group-inputs'>\n                <h3>User Information</h3>\n                <label>Nickname &nbsp;\n                    <input\n                        value={edit_form_values.nickname}\n                        onChange={onChange}\n                        name='nickname'\n                        type='text'\n                        placeholder={`Give a new nickname to ${plant.nickname} `}\n                    />\n                </label>\n                <label>Species &nbsp;\n                    <input\n                        value={edit_form_values.species}\n                        onChange={onChange}\n                        name='species'\n                        type='text'\n                        placeholder={`Edit species of ${plant.nickname}`}\n                    />\n                </label>\n                <label>How often do you water this plant? &nbsp;\n                    <select name=\"h2oFrequency\" onChange={onChange}>\n                        <option value=\"\">--Select One--</option>\n                        <option value=\"none\">None</option>\n                        <option value=\"Twice a day\">Twice a day</option>\n                        <option value=\"Once a day\">Once a day</option>\n                        <option value=\"Every other day\">Every other day</option>\n                        <option value=\"Twice a week\">Twice a week</option>\n                    </select><br/><br/>\n                </label>\n                <label>Image: &nbsp;\n                    <input\n                        type=\"text\"\n                        onChange={onChange}\n                        name='image'\n                        value={edit_form_values.image}\n                    />\n                </label><br/>\n                <button disabled={disabled} className=\"save-plant\">Save New Plant</button>\n            </div>\n        </form>\n        \n    )\n}",{"ruleId":"89","severity":1,"message":"90","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":23},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"89","severity":1,"message":"97","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"98","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":13},{"ruleId":"89","severity":1,"message":"99","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"97","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"98","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":13},{"ruleId":"89","severity":1,"message":"100","line":22,"column":21,"nodeType":"91","messageId":"92","endLine":22,"endColumn":26},{"ruleId":"89","severity":1,"message":"97","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"101","line":41,"column":11,"nodeType":"91","messageId":"92","endLine":41,"endColumn":22},{"ruleId":"89","severity":1,"message":"102","line":42,"column":15,"nodeType":"91","messageId":"92","endLine":42,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":59,"column":17,"nodeType":"105","endLine":59,"endColumn":84},{"ruleId":"89","severity":1,"message":"106","line":21,"column":13,"nodeType":"91","messageId":"92","endLine":21,"endColumn":19},{"ruleId":"89","severity":1,"message":"107","line":21,"column":28,"nodeType":"91","messageId":"92","endLine":21,"endColumn":44},{"ruleId":"89","severity":1,"message":"108","line":21,"column":46,"nodeType":"91","messageId":"92","endLine":21,"endColumn":55},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'styled' is defined but never used.","'plant' is assigned a value but never used.","'update_form' is assigned a value but never used.","'update_plant' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'plants' is assigned a value but never used.","'set_plant_values' is assigned a value but never used.","'isToggled' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]